{"version":3,"file":"src_app_conjugator_conjugator_module_ts.js","mappings":"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","sources":["./src/app/conjugator/conjugator-routing.module.ts","./src/app/conjugator/conjugator.module.ts","./src/app/conjugator/conjugator.page.ts","./src/app/models/node.model.ts","./src/app/models/tree.model.ts","./src/app/services/data.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConjugatorPage } from './conjugator.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConjugatorPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConjugatorPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ConjugatorPage } from './conjugator.page';\nimport { ConjugatorPageRoutingModule } from './conjugator-routing.module';\nimport { VerbTooltipPageModule } from 'src/app/modals/verb-tooltip/verb-tooltip.module';\nimport { VerbTooltipPage } from '../modals/verb-tooltip/verb-tooltip.page';\nimport { SearchPage } from '../modals/search/search.page';\nimport { SearchPageModule } from 'src/app/modals/search/search.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ConjugatorPageRoutingModule,\n    VerbTooltipPageModule, \n    SearchPageModule\n  ],\n  declarations: [ConjugatorPage],\n  entryComponents: [VerbTooltipPage, SearchPage]\n})\nexport class ConjugatorPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { DataService } from '../services/data.service';\nimport { grammarCatItem } from '../models/grammar-cat-item.model';\nimport { grammarCat } from '../models/grammar-cat.model';\nimport { BehaviorSubject, Observable, timer } from 'rxjs';\nimport { SearchPage } from '../modals/search/search.page';\nimport { node } from \"../models/node.model\";\nimport { VerbTooltipPage } from '../modals/verb-tooltip/verb-tooltip.page';\n\n@Component({\n  selector: 'app-conjugator',\n  templateUrl: './conjugator.page.html',\n  styleUrls: ['./conjugator.page.scss']\n})\n\nexport class ConjugatorPage implements OnInit {\n  public verb0: any;\n  public selectedType: any;\n\n  open = '../../../assets/minusicon.png';\n  closed = '../../../assets/plusicon.png';\n  error = '';\n  show_result = false;\n  show_error = false;\n  result = '';\n  showVerb = '';\n  selectedValues: any[];\n  automaticClose = false;\n  information: Array<grammarCat> = [];\n  myFunInformation$ = new BehaviorSubject(this.information);\n  selectedOptions: { [id: string]: { translation, id, base } } = {};\n  selectedPath: { [id: string]: node} = {};\n\n  constructor(private modalController: ModalController, private service: DataService) { }\n\n  ngOnInit() {\n    this.information = JSON.parse(JSON.stringify(this.service.setinformation));\n\n    this.myFunInformation$.subscribe(data =>{\n      this.information = data;\n    });\n    this.myFunInformation$.next(JSON.parse(JSON.stringify(this.service.setinformation)));\n\n    //Creates the array that contains the selected keys\n    this.information.forEach(element => {\n      let key = element.name;\n      this.selectedOptions[key] = {\n        translation: '',\n        id: '',\n        base: ''\n      };\n    });\n    return \n  };\n\n  getContent() {\n    return document.querySelector('ion-content');\n  }\n\n  scrollToBottom() {\n    let content= document.querySelector('ion-content');\n    setTimeout(function () {\n      content.scrollToBottom(500);\n    }, 250);\n    \n  }\n\n  scrollToTop() {\n    this.getContent().scrollToTop(500);\n  }\n\n  scroll(id) {\n    console.log(`scrolling to ${id}`);\n    let el = document.getElementById(id);\n    if (id == \"result\" || id == \"error\"){\n    setTimeout(function () {el.scrollIntoView({ behavior: 'smooth', block: 'end' })}, 250);\n    }else{\n      setTimeout(function () {el.scrollIntoView({ behavior: 'smooth', block: 'start' })}, 500);\n    }\n  }\n\n  updateDisabled(pos,index: number){\n    /* \n    This function handles tasks relating to enabling and disabling available categories.\n    Returns none\n    */\n\n    let i = index + 1\n    this.disableLowerCat(i); // IMPORTANT: Disable must ALWAYS come before able, otherwise it will not enable the lower category\n    this.ableCat(i);\n  }\n\n  updatePath(pos, index:number, selected){\n    /*Function updates the path and the information for the follow category \n    pos is current cat\n    index is the pos index\n    selected is the selected option \n    */\n\n\n    let prev_pos;\n    let n;\n\n    if (index == 0){\n      prev_pos = pos;\n      let root = this.service.tree.getRoot();\n      n = root.getChild(selected.id);\n    } else{\n      prev_pos = this.information[index - 1].name;\n      n = this.selectedPath[prev_pos].getChild(selected.id);\n    }\n    console.log(\"should be node\", n);\n    this.updateNodePath(n, pos);\n    console.log(\"Updated Path\", this.selectedPath);\n    this.updateInformation(index+1, pos)\n  }\n\n\n  ableCat(index: number){\n    /*\n    This function takes in an index and enables the next category\n    to be accessible.\n    */\n    if (index < this.information.length){\n      this.information[index].disabled = false;\n      this.myFunInformation$.next(this.information);\n    }\n  }\n\n  disableLowerCat(index: number){\n    /*\n    This function takes in an index and disables all categories lower than that, \n    so that the user cannot change a previous category without resetting the below categories.\n    */\n    \n    let key: string;\n    for(let i = index; i < this.information.length; i ++){ // find all categories at a lower index\n      key = this.information[i].name; // get the name\n      this.selectedOptions[key] = {translation: '', id: '', base:''};  // reset so that there is no selected option at that name\n      this.information[i].disabled=true; // disable access\n    }\n    console.log(this.selectedOptions);\n  }\n\n  \n\n  setSelected(pos, selected) {\n    /* \n    This function takes in the category name (pos as in part of speech)\n    */\n    this.selectedOptions[pos].translation = selected.translation;\n    this.selectedOptions[pos].id = selected.id;\n    this.selectedOptions[pos].base = selected.base;\n  }\n\n\n  updateNodePath(n: node, pos: string) {\n    /*Updates path at the current cateogry with the newly created node object\n    n is the newly created node object\n    pos is the current category\n     */\n    this.selectedPath[pos] = n;\n    console.log(\"this.selectedPath[\",pos,\"]\", this.selectedPath[pos]);\n  }\n\n\n  updateInformation(index: number, pos:string) {\n    let selectFrom = this.service.setinformation[index].cat;\n    this.information[index].cat = [];\n    \n    let children = this.selectedPath[pos].getChildren();\n    console.log(\"Got children\", children);\n    selectFrom.forEach(element => {\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].getId() == element.id){\n          this.information[index].cat.push(element);\n          break;\n        }\n      }\n    });\n    console.log(\"after this.information\", this.information);\n    this.myFunInformation$.next(this.information);\n  }\n\n  Conjugate(){\n    console.log(\"conjugate\",this.selectedOptions);\n    let canconjugate = true;\n    Object.keys(this.selectedOptions).forEach(element => {\n      if (this.selectedOptions[element].id === ''){\n        canconjugate = false;\n      }\n    }); \n    if (!canconjugate){\n      this.show_error = true;\n      this.error = \"Please make sure to choose an option from each category.\";\n      this.result = '';\n      this.show_result = false;\n      // this.scrollToBottom();\n      this.scroll(\"error\");\n      return;\n    }\n    this.error = '';\n    this.show_result = true;\n    this.show_error = false;\n    let results = this.service.conjugate(this.selectedOptions);\n    let s = '';\n    for (let r of results){\n      s += r.toString();\n      s += ' ';\n    }\n    this.result = s;\n    this.scroll(\"result\");\n    // this.scrollToBottom();\n  }\n\n  async openModalSearch(whichSearch, index) {\n    console.log(\"this.information[index].cat\", this.information[index].cat);\n    const modal = await this.modalController.create({\n      component: SearchPage,\n      componentProps: {\n        'conj_type':whichSearch,\n        'options':this.information[index].cat\n      }\n    });\n\n\n    modal.onWillDismiss().then(dataReturned => {\n      // trigger when about to close the modal\n      if (dataReturned != null || dataReturned != undefined){\n        if (dataReturned.data.id.length > 0) { // if something was returned, set it as the selected option\n          this.selectedOptions[whichSearch].translation = dataReturned.data.translation;\n          this.selectedOptions[whichSearch].id = dataReturned.data.id;\n          this.selectedOptions[whichSearch].base = dataReturned.data.base;\n          this.updateDisabled(whichSearch,index);\n          this.updatePath(whichSearch,index, dataReturned.data);\n          console.log(this.selectedOptions);\n          let id = this.information[index + 1].name;\n          this.scroll(id);\n        }\n      }\n      console.log('Receive: ', dataReturned.data);\n    });\n\n    // Currently does actively send information, but could be a useful feater that if a user already picked a verb that it\n    // appears in the search when they search again (?)\n    return await modal.present().then(_ => {\n    });\n  }\n\n  async openModalToolTip(whichtip) {\n    // with data\n    console.log(\"Tooltip pressed\", whichtip);\n    const modal = await this.modalController.create({\n      \n      component: VerbTooltipPage,\n      componentProps: {\n        'conj_type':whichtip\n      }\n      \n    });\n    modal.onWillDismiss().then(dataReturned => {\n    });\n\n    return await modal.present().then(_ => {\n    });\n  }\n\n\n\n  ngOnDestory() {\n    this.myFunInformation$.unsubscribe();\n  }\n\n/*\n * Disabled reset functionality\n *\n  reset(){\n    let key: string;\n    for(let i = 0; i < this.information.length; i ++){ // find all categories at a lower index\n      key = this.information[i].name; // get the name\n      this.selectedOptions[key] = {translation: '', id: '', base:''};  // reset so that there is no selected option at that name\n      this.information[i].disabled=true; // disable access\n    }\n    this.information[0].disabled=false;\n    this.result = '';\n    this.error = '';\n    this.show_result = false;\n    this.show_error = true;\n    this.scrollToTop();\n  }\n*/\n\n}\n","export class node{\n    private id: string;\n    private parent: node;\n    private children: Array<node> = [];\n\n    constructor(id:string) {\n        this.id = id;\n    }\n\n    // id getter and setter\n    getId(){\n        return this.id;\n    }\n    setId(newId: string){\n        this.id = newId;\n    }\n\n    // parent getter and setter\n    getParent(){\n        return this.parent;\n    }\n    setParent(newParent: node){\n        this.parent = newParent;\n    }\n\n    // children getters and setters\n    getChildren() {\n        return this.children;\n    }\n    getChild(childId: string){\n        for (let i = 0; i < this.children.length; i++){\n            if (this.children[i].getId() == childId){\n                return this.children[i];\n            }\n        }\n    }\n    addChild(child: node){\n        this.children.push(child);\n    }\n\n}","import {node} from \"./node.model\";\n\nexport class Tree {\n    \n    private root: node;\n    \n    constructor(root: node) {\n        this.root = root;\n    }\n\n    getRoot(){\n        return this.root;\n    }\n    setRoot(root: node){\n        this.root = root;\n    }\n}","import { Injectable } from '@angular/core';\nimport * as Conjugation from '../../assets/JSON/conjugation.json';\nimport * as Information from '../../assets/JSON/information.json';\nimport * as JSONTree from '../../assets/JSON/category_tree.json';\nimport { grammarCat } from '../models/grammar-cat.model';\nimport { grammarCatItem } from '../models/grammar-cat-item.model';\nimport { Tree } from 'src/app/models/tree.model';\nimport { node } from \"../models/node.model\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  JsonTree = JSONTree['default'];\n  conjugation_info = Conjugation['default']\n  conjugations = this.conjugation_info[1]  // conjugation tree\n  conj_order = this.conjugation_info[0]  // level order of conjugation tree\n  setinformation: Array<grammarCat> = [];\n\n  tree = new Tree(new node('root'));\n\n  constructor() {\n    this.loadInformation();\n    for (let item of this.setinformation){\n      item.cat.forEach(child=>{\n        if(typeof child.type_color === 'undefined'){\n          child.type_color = \"\";\n        }\n      }); \n    }\n    this.setinformation[0].disabled = false;\n    let root_node = this.tree.getRoot();\n    this.buildTree(this.JsonTree, root_node);\n  }\n\n  \n\n  loadInformation(){ \n    this.setinformation = Information['default'].map(item => {\n      let catItem = item.children.map(child => {\n        let item: grammarCatItem = {\n          translation: child.translation,\n          id: child.id,\n          base: child.base,\n          type_color: child.type_color\n        }\n        return item;\n      });\n\n      let cat: grammarCat = {\n        name: item.name,\n        cat: catItem,\n        open: false,\n        disabled: true,\n    }\n    return cat;\n    });\n  }\n\n  buildTree(tree, upper_node){\n    if(Array.isArray(tree)){\n      tree.forEach(id  =>{\n        let n_level_node = new node(id);\n        upper_node.addChild(n_level_node);\n      })\n      return;\n    }\n    Object.keys(tree).forEach(id => {\n      let n_level_node = new node(id);\n      upper_node.addChild(n_level_node);\n      if (typeof tree[id] !== 'undefined' &&  typeof tree[id] != \"string\"){\n        this.buildTree(tree[id],n_level_node);\n      }\n    });\n    return;\n   }\n\n  \n  conjugate(chosenIds) {\n    let results = [];\n    console.log(\"chosenIds\", chosenIds);\n    console.log(\"typeof chosenIds\", typeof chosenIds);\n    let current_tree = this.conjugations;\n    \n    for (let item of this.conj_order){ // for each category type item\n      console.log(\"current item\", item);\n      if (item == this.conj_order[this.conj_order.length-1]){ //if its the last item, its the conjugation\n        console.log(\"item\", item);\n        results.push(current_tree); //return the current value at the last level\n        break;  \n      }\n       for (let key of Object.keys(current_tree)){ //otherwise go through the current tree level\n        console.log(\"key\", key, \"item\", item, 'chosenIds[item]', chosenIds[item]);\n         if (key === chosenIds[item].id){ // if the leaf node is the same value as the chosen value\n            current_tree = current_tree[key]; // start the next level of the tree\n         }\n       }\n    }\n\n    console.log('conjugation results', results);\n    return results;\n  }\n  \n}\n"],"names":[],"sourceRoot":"webpack:///"}